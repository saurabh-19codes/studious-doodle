it('shows success toast when updateMessageClose is true and handles close', () => {
  const mockSetUpdateMessageClose = jest.fn();
  const mockSetUnauthorizeMessage = jest.fn();

  render(
    <StoryDetailsPopup
      {...baseProps}
      updateMessageClose={true}
      unauthorizeMessage={false}
      setUpdateMessageClose={mockSetUpdateMessageClose}
      setUnauthorizeMessage={mockSetUnauthorizeMessage}
    />
  );

  expect(screen.getByText('Feature Updated successfully!')).toBeInTheDocument();

  // Trigger toast close
  fireEvent.click(screen.getByTestId('toast-close-button'));

  expect(mockSetUpdateMessageClose).toHaveBeenCalledWith(false);
  expect(mockSetUnauthorizeMessage).not.toHaveBeenCalled();
});

it('shows error toast when unauthorizeMessage is true and handles close', () => {
  const mockSetUpdateMessageClose = jest.fn();
  const mockSetUnauthorizeMessage = jest.fn();

  render(
    <StoryDetailsPopup
      {...baseProps}
      updateMessageClose={false}
      unauthorizeMessage={true}
      setUpdateMessageClose={mockSetUpdateMessageClose}
      setUnauthorizeMessage={mockSetUnauthorizeMessage}
    />
  );

  expect(screen.getByText('Access Denied!')).toBeInTheDocument();

  // Trigger toast close
  fireEvent.click(screen.getByTestId('toast-close-button'));

  expect(mockSetUnauthorizeMessage).toHaveBeenCalledWith(false);
  expect(mockSetUpdateMessageClose).not.toHaveBeenCalled();
});
import { render, screen, fireEvent } from '@testing-library/react';
import StoryDetailsPopup from '../StoryDetailsPopup';
import '@testing-library/jest-dom';

jest.useFakeTimers();

it('should auto-close update toast after 3 seconds', () => {
  render(<StoryDetailsPopup {...defaultProps} />);

  // Simulate whatever action causes updateMessageClose to become true
  // e.g., clicking Update button
  const updateBtn = screen.getByText(/update rally/i);
  fireEvent.click(updateBtn);

  // Confirm toast appears
  expect(screen.getByText(/update successful/i)).toBeInTheDocument();

  // Fast-forward 3 seconds
  jest.advanceTimersByTime(3000);

  // Confirm toast is removed
  expect(screen.queryByText(/update successful/i)).not.toBeInTheDocument();
});
